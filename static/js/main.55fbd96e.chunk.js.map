{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","value","setValue","select","setSelect","visibleTodos","setTodos","isValidTitle","setTitleError","isValidUser","setUserError","getLargestId","todosArr","idsArr","Math","max","action","method","onSubmit","e","preventDefault","newTodo","Number","currentTodos","type","placeholder","onChange","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55fbd96e.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [value, setValue] = useState('');\n  const [select, setSelect] = useState('');\n  const [visibleTodos, setTodos] = useState(todos);\n  const [isValidTitle, setTitleError] = useState(false);\n  const [isValidUser, setUserError] = useState(false);\n\n  function getLargestId(todosArr: Todo[]) :number {\n    const idsArr = todosArr.map((todo) => (todo.id));\n\n    return Math.max(...idsArr) + 1;\n  }\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    const newTodo = {\n      id: getLargestId(visibleTodos),\n      userId: (Number(select)),\n      title: value,\n      completed: false,\n      user: getUser(Number(select)),\n    };\n\n    const { title, user } = newTodo;\n\n    if (title && user) {\n      setTodos((currentTodos) => [...currentTodos, newTodo]);\n      setSelect('');\n      setValue('');\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter the title for your todo\"\n              value={value}\n              onChange={(e) => {\n                setValue(e.currentTarget.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n          {isValidTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={select}\n              onChange={(e) => {\n                setSelect(e.currentTarget.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"0\">Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isValidUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}